/* 
 * File:   UIAbilityBox.cpp
 * Author: karsten
 * 
 * Created on 26. februar 2013, 21:56
 */

#include "UIAbilityBox.h"
#include "../Powers/CPower.h"

UIAbilityBox::UIAbilityBox(UIBaseFrame* parrent, uint32_t x, uint32_t y, CCreature* creature, CPower* power) :
UIBaseFrame(parrent,x,y,parrent->getWight(),parrent->getHeight()){
	this->_creature = creature;
	_power = power;
	
}

uint32_t UIAbilityBox::click(uint32_t x, uint32_t y){
	cerr<<"click abi"<<endl;
	if(_power){
		_power->activate(playerTarget);
		return 1;
	}
	return 0;
}

void UIAbilityBox::draw(){
	glTranslated((GLfloat)(_x),(GLfloat)(_y),0);
	if(this->_power){
		glPushMatrix();


		int32_t uvx1;
		int32_t uvy1;
		uint32_t sheetsize;

		sheetsize = 1024;
		switch (this->_power->getIconId()){

		//*****************************************
		//file generated by python spritesheet
		#include "../Textures/Icons/iconcords.txt"

		//**************************************************
			default:{
			glBindTexture( GL_TEXTURE_2D, textures[Textures::Icons1]);

			uvx1 = 0;
			uvy1 = 0;
			cerr<<"Warning subitemsheed tex"<<endl;
			break;
			}
		}


		
		

		glBegin( GL_QUADS );
		//Bottom-left vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1), (((double)1)/sheetsize)*(uvy1) );
		glVertex3f(0, 0, 0.0f);

		//Bottom-right vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1+_wight), (((double)1)/sheetsize)*(uvy1) );
		glVertex3f(_wight, 0, 0.f);

		//Top-right vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1+_wight), (((double)1)/sheetsize)*(uvy1+_height) );
		glVertex3f(_wight, _height, 0.f);

		//Top-left vertex (corner)
		glTexCoord2f((((double)1)/sheetsize)*(uvx1), (((double)1)/sheetsize)*(uvy1+_height) );
		glVertex3f(0, _height, 0.f);
		glEnd();


		glPopMatrix();
	}
	this->drawChilds();
}


UIAbilityBox::~UIAbilityBox() {
}

